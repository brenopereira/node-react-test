generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int      @id @default(autoincrement())
  name       String   @default("")
  email      String   @unique
  password   String   @default("")
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model clients {
  id         Int      @id @default(autoincrement())
  name       String   @default("")
  document   String   @default("")
  birth_date String   @default("")
  address    String   @default("")
  city       String   @default("")
  state      String   @default("")
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  rents rents[]
}

model books {
  id     Int    @id @default(autoincrement())
  title  String @default("")
  author String @default("")

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  book_copies book_copies[]
}

model book_copies {
  id        Int    @id @default(autoincrement())
  isbn      String @default("")
  copy_code String @default("")

  bookId Int?
  book   books?  @relation(fields: [bookId], references: [id])
  rents  rents[]
}

model rents {
  id       Int     @id @default(autoincrement())
  returned Boolean @default(false)

  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
  expires_at  DateTime @default(now())
  returned_at DateTime @default(now())

  copyId Int?
  copy   book_copies? @relation(fields: [copyId], references: [id])

  clientId Int?
  clients  clients? @relation(fields: [clientId], references: [id])
}
